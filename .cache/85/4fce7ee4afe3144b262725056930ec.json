{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1666456615918},{"name":"../engine","loc":{"line":17,"column":23,"index":726},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":25,"index":764},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32,"index":815},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19,"index":856},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gatherND = void 0;\nvar _engine = require(\"../engine\");\nvar _kernel_names = require(\"../kernel_names\");\nvar _tensor_util_env = require(\"../tensor_util_env\");\nvar _operation = require(\"./operation\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x, indices) {\n  const $indices = (0, _tensor_util_env.convertToTensor)(indices, 'indices', 'gatherND', 'int32');\n  const $x = (0, _tensor_util_env.convertToTensor)(x, 'x', 'gatherND', 'string_or_numeric');\n  const inputs = {\n    params: $x,\n    indices: $indices\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.GatherNd, inputs);\n}\nconst gatherND = (0, _operation.op)({\n  gatherND_\n});\nexports.gatherND = gatherND;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":66,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":18},"generated":{"line":66,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":66,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":39},"generated":{"line":66,"column":20}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":41},"generated":{"line":66,"column":22}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":67},"generated":{"line":66,"column":29}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":63,"column":67},"generated":{"line":66,"column":31}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":2},"generated":{"line":67,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":67,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":67,"column":16}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":19},"generated":{"line":67,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":19},"generated":{"line":67,"column":23}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":34},"generated":{"line":67,"column":55}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":67,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":42},"generated":{"line":67,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":44},"generated":{"line":67,"column":66}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":53},"generated":{"line":67,"column":75}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":55},"generated":{"line":67,"column":77}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":65},"generated":{"line":67,"column":87}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":67},"generated":{"line":67,"column":89}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":74},"generated":{"line":67,"column":96}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":64,"column":75},"generated":{"line":67,"column":97}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":68,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":68,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":10},"generated":{"line":68,"column":10}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":13},"generated":{"line":68,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":13},"generated":{"line":68,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":28},"generated":{"line":68,"column":49}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":29},"generated":{"line":68,"column":51}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":30},"generated":{"line":68,"column":52}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":32},"generated":{"line":68,"column":54}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":68,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":37},"generated":{"line":68,"column":59}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":68,"column":69}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":49},"generated":{"line":68,"column":71}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":68},"generated":{"line":68,"column":90}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":65,"column":69},"generated":{"line":68,"column":91}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":69,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":69,"column":8}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":14},"generated":{"line":69,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":33},"generated":{"line":69,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":70,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":40},"generated":{"line":70,"column":10}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":42},"generated":{"line":70,"column":12}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":44},"generated":{"line":70,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":46},"generated":{"line":71,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":71,"column":11}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":55},"generated":{"line":71,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":63},"generated":{"line":72,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":67,"column":64},"generated":{"line":72,"column":3}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":73,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":73,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":15},"generated":{"line":73,"column":23}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":73,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":25},"generated":{"line":73,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":26},"generated":{"line":73,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":34},"generated":{"line":73,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":36},"generated":{"line":73,"column":58}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":66},"generated":{"line":73,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":69,"column":67},"generated":{"line":73,"column":65}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":7},"generated":{"line":75,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":13},"generated":{"line":75,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":75,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":24},"generated":{"line":75,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":24},"generated":{"line":75,"column":21}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":26},"generated":{"line":75,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":27},"generated":{"line":75,"column":36}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":28},"generated":{"line":76,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":37},"generated":{"line":77,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":38},"generated":{"line":77,"column":1}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":39},"generated":{"line":77,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/gather_nd.ts","name":null,"original":{"line":72,"column":40},"generated":{"line":78,"column":0}}],"sources":{"../../../../../../tfjs-core/src/ops/gather_nd.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {GatherNd, GatherNdInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x: Tensor|TensorLike, indices: Tensor|TensorLike): Tensor {\n  const $indices = convertToTensor(indices, 'indices', 'gatherND', 'int32');\n  const $x = convertToTensor(x, 'x', 'gatherND', 'string_or_numeric');\n\n  const inputs: GatherNdInputs = {params: $x, indices: $indices};\n\n  return ENGINE.runKernel(GatherNd, inputs as {} as NamedTensorMap);\n}\n\nexport const gatherND = op({gatherND_});\n"},"lineCount":null}},"error":null,"hash":"6261c7b000a4294e9f4f5081711ea564","cacheData":{"env":{}}}