{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js.map","includedInParent":true,"mtime":1666456615737},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1666456615737}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pool3DProgram = exports.Pool2DProgram = void 0;\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass Pool2DProgram {\n  constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n    this.variableNames = ['x'];\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n    const isAvgPool = poolType === 'avg';\n    const batchFlattenPositionStr = `((batch  * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n    const flattenPositionStr = `(xR * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n    if (computePositions) {\n      const compareOp = '>=';\n      this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${flattenPositions ? includeBatchInIndex ? batchFlattenPositionStr : flattenPositionStr : `wR * ${effectiveFilterWidth} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n    const compareOp = 'max';\n    let returnValue = `${poolType}(${poolType}(${poolType}(` + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\nexports.Pool2DProgram = Pool2DProgram;\nclass Pool3DProgram {\n  constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n    this.variableNames = ['x'];\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n    const isAvgPool = poolType === 'avg';\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n    if (computePositions) {\n      const compareOp = '>=';\n      this.userCode = `\n        const ivec3 strides =\n            ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n        const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${effectiveFilterDepth};\n              wD += ${dilationDepth}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${effectiveFilterHeight};\n                wR += ${dilationHeight}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${effectiveFilterWidth};\n                  wC += ${dilationWidth}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${compareOp} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${flattenPositions ? includeBatchInIndex ? `(((batch * ${convInfo.inDepth} + xD) * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch` : `((xD * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch` : `wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                      wR * ${effectiveFilterWidth} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n    const compareOp = 'max';\n    let returnValue = `${poolType}(${poolType}(${poolType}(` + 'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n    this.userCode = `\n      const ivec3 strides =\n        ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${dilationWidth}, ch)\n              );\n\n              ${updateSnippet}\n            }\n\n            int xC = xCCorner + ${filterWidthNearestVec4};\n            if (${filterWidthVec4Remainder === 1}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 2}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 3}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                initializationValue\n              );\n\n              ${updateSnippet}\n            }\n          }\n          setOutput(${returnValue});\n        }\n      }\n    `;\n  }\n}\nexports.Pool3DProgram = Pool3DProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/pool_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":23,"column":0}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":23,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":23,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":23,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":24,"column":2}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":24,"column":13}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":24,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":27,"column":41},"generated":{"line":24,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":27,"column":62},"generated":{"line":24,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":24,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":31},"generated":{"line":24,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":24,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":49},"generated":{"line":24,"column":68}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":52},"generated":{"line":24,"column":71}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":28,"column":57},"generated":{"line":24,"column":76}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":24,"column":78}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":24,"column":97}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":24,"column":100}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":24,"column":105}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":24,"column":107}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":25,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":25,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":25,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":25,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":25,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":25,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":22},"generated":{"line":25,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":22,"column":23},"generated":{"line":25,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":26,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":26,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":26,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":26,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":26,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":26,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":46},"generated":{"line":26,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":30,"column":48},"generated":{"line":26,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":27,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":27,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":27,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":27,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":27,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":66},"generated":{"line":27,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":31,"column":67},"generated":{"line":27,"column":67}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":29,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":29,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":29,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":29,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":32},"generated":{"line":29,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":29,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":34,"column":44},"generated":{"line":29,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":30,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":30,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":30,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":30,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":33},"generated":{"line":30,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":30,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":35,"column":46},"generated":{"line":30,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":31,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":31,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":21},"generated":{"line":31,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":31,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":32},"generated":{"line":31,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":31,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":36,"column":44},"generated":{"line":31,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":32,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":32,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":24},"generated":{"line":32,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":27},"generated":{"line":32,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":35},"generated":{"line":32,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":32,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":37,"column":50},"generated":{"line":32,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":33,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":33,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":33,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":33,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":34},"generated":{"line":33,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":35},"generated":{"line":33,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":38,"column":48},"generated":{"line":33,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":34,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":34,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":31},"generated":{"line":34,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":34,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":42},"generated":{"line":34,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":43},"generated":{"line":34,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":39,"column":64},"generated":{"line":34,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":35,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":35,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":30},"generated":{"line":35,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":33},"generated":{"line":35,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":41},"generated":{"line":35,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":42},"generated":{"line":35,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":40,"column":62},"generated":{"line":35,"column":62}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":36,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":36,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":36,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":19},"generated":{"line":36,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":27},"generated":{"line":36,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":28},"generated":{"line":36,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":35},"generated":{"line":36,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":36},"generated":{"line":36,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":42,"column":39},"generated":{"line":36,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":37,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":37,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":17},"generated":{"line":37,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":37,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":28},"generated":{"line":37,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":37,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":36},"generated":{"line":37,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":37},"generated":{"line":37,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":43,"column":41},"generated":{"line":37,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":38,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":38,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":38,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":38,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":38,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":38,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":32},"generated":{"line":38,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":44,"column":40},"generated":{"line":38,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":39,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":39,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":19},"generated":{"line":39,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":39,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":30},"generated":{"line":39,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":35},"generated":{"line":39,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":46,"column":40},"generated":{"line":39,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":40,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":40,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":33},"generated":{"line":40,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":40,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":50},"generated":{"line":40,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":58},"generated":{"line":40,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":59},"generated":{"line":40,"column":59}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":47,"column":67},"generated":{"line":40,"column":67}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":40,"column":79}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":40,"column":87}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":40,"column":88}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":24},"generated":{"line":40,"column":95}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":36},"generated":{"line":40,"column":107}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":44},"generated":{"line":40,"column":115}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":45},"generated":{"line":40,"column":116}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":55},"generated":{"line":40,"column":126}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":48,"column":61},"generated":{"line":40,"column":132}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":41,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":41,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":49,"column":28},"generated":{"line":41,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":41,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":17},"generated":{"line":41,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":41,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":26},"generated":{"line":41,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":33},"generated":{"line":41,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":45},"generated":{"line":41,"column":68}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":53},"generated":{"line":41,"column":76}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":54},"generated":{"line":41,"column":77}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":64},"generated":{"line":41,"column":87}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":50,"column":70},"generated":{"line":41,"column":93}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":42,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":42,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":52,"column":27},"generated":{"line":42,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":42,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":52,"column":35},"generated":{"line":42,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":43,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":43,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":43,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":53,"column":18},"generated":{"line":43,"column":18}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":53,"column":20},"generated":{"line":43,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":44,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":45,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":55,"column":25},"generated":{"line":45,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":55,"column":28},"generated":{"line":45,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":55,"column":42},"generated":{"line":45,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":47,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":47,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":47,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":47,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":48,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":59,"column":12},"generated":{"line":48,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":59,"column":21},"generated":{"line":48,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":48,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":59,"column":28},"generated":{"line":48,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":49,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":61,"column":10},"generated":{"line":49,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":49,"column":11}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":61,"column":19},"generated":{"line":49,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":61,"column":22},"generated":{"line":49,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":62,"column":38},"generated":{"line":50,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":62,"column":50},"generated":{"line":50,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":62,"column":55},"generated":{"line":50,"column":55}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":62,"column":66},"generated":{"line":50,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":63,"column":35},"generated":{"line":51,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":63,"column":41},"generated":{"line":51,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":63,"column":46},"generated":{"line":51,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":63,"column":53},"generated":{"line":51,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":81,"column":34},"generated":{"line":69,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":81,"column":55},"generated":{"line":69,"column":55}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":82,"column":22},"generated":{"line":70,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":82,"column":36},"generated":{"line":70,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":85,"column":34},"generated":{"line":73,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":85,"column":42},"generated":{"line":73,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":85,"column":43},"generated":{"line":73,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":85,"column":51},"generated":{"line":73,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":77,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":89,"column":56},"generated":{"line":77,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":90,"column":24},"generated":{"line":78,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":90,"column":37},"generated":{"line":78,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":93,"column":36},"generated":{"line":81,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":93,"column":44},"generated":{"line":81,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":93,"column":45},"generated":{"line":81,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":93,"column":52},"generated":{"line":81,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":103,"column":26},"generated":{"line":91,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":103,"column":35},"generated":{"line":91,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":94,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":26},"generated":{"line":94,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":30},"generated":{"line":94,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":49},"generated":{"line":94,"column":73}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":52},"generated":{"line":94,"column":76}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":107,"column":75},"generated":{"line":94,"column":99}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":108,"column":52},"generated":{"line":94,"column":102}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":108,"column":70},"generated":{"line":94,"column":120}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":109,"column":29},"generated":{"line":94,"column":123}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":109,"column":37},"generated":{"line":94,"column":131}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":109,"column":57},"generated":{"line":94,"column":151}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":109,"column":64},"generated":{"line":94,"column":158}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":115,"column":7},"generated":{"line":100,"column":7}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":116,"column":6},"generated":{"line":101,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":103,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":119,"column":10},"generated":{"line":103,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":119,"column":19},"generated":{"line":103,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":119,"column":22},"generated":{"line":103,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":119,"column":27},"generated":{"line":103,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":4},"generated":{"line":104,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":104,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":19},"generated":{"line":104,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":22},"generated":{"line":104,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":104,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":33},"generated":{"line":104,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":37},"generated":{"line":104,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":45},"generated":{"line":104,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":49},"generated":{"line":104,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":57},"generated":{"line":104,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":121,"column":60},"generated":{"line":104,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":104,"column":63}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":122,"column":75},"generated":{"line":104,"column":130}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":105,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":8},"generated":{"line":105,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":16},"generated":{"line":105,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":21},"generated":{"line":105,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":26},"generated":{"line":105,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":123,"column":28},"generated":{"line":105,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":124,"column":6},"generated":{"line":106,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":124,"column":17},"generated":{"line":106,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":124,"column":20},"generated":{"line":106,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":124,"column":38},"generated":{"line":106,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":4},"generated":{"line":108,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":108,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":32},"generated":{"line":108,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":35},"generated":{"line":108,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":39},"generated":{"line":108,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":40},"generated":{"line":108,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":45},"generated":{"line":108,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":46},"generated":{"line":108,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":57},"generated":{"line":108,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":60},"generated":{"line":108,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":61},"generated":{"line":108,"column":61}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":62},"generated":{"line":108,"column":62}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":65},"generated":{"line":108,"column":65}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":127,"column":66},"generated":{"line":108,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":4},"generated":{"line":109,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":10},"generated":{"line":109,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":34},"generated":{"line":109,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":37},"generated":{"line":109,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":48},"generated":{"line":109,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":51},"generated":{"line":109,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":128,"column":52},"generated":{"line":109,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":130,"column":4},"generated":{"line":110,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":130,"column":10},"generated":{"line":110,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":130,"column":23},"generated":{"line":110,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":130,"column":26},"generated":{"line":110,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":131,"column":12},"generated":{"line":111,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":131,"column":21},"generated":{"line":111,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":134,"column":24},"generated":{"line":114,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":134,"column":33},"generated":{"line":114,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":136,"column":5},"generated":{"line":116,"column":5}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":138,"column":4},"generated":{"line":117,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":117,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":138,"column":9},"generated":{"line":117,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":138,"column":17},"generated":{"line":117,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":138,"column":20},"generated":{"line":117,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":139,"column":36},"generated":{"line":118,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":139,"column":48},"generated":{"line":118,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":139,"column":53},"generated":{"line":118,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":139,"column":64},"generated":{"line":118,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":140,"column":33},"generated":{"line":119,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":140,"column":39},"generated":{"line":119,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":140,"column":44},"generated":{"line":119,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":140,"column":51},"generated":{"line":119,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":141,"column":42},"generated":{"line":120,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":141,"column":61},"generated":{"line":120,"column":61}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":147,"column":30},"generated":{"line":126,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":147,"column":38},"generated":{"line":126,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":147,"column":39},"generated":{"line":126,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":147,"column":46},"generated":{"line":126,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":165,"column":34},"generated":{"line":144,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":165,"column":53},"generated":{"line":144,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":169,"column":32},"generated":{"line":148,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":169,"column":53},"generated":{"line":148,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":170,"column":20},"generated":{"line":149,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":170,"column":34},"generated":{"line":149,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":173,"column":32},"generated":{"line":152,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":173,"column":40},"generated":{"line":152,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":173,"column":41},"generated":{"line":152,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":173,"column":49},"generated":{"line":152,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":177,"column":34},"generated":{"line":156,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":177,"column":56},"generated":{"line":156,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":178,"column":39},"generated":{"line":157,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":178,"column":52},"generated":{"line":157,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":182,"column":41},"generated":{"line":161,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":182,"column":54},"generated":{"line":161,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":183,"column":45},"generated":{"line":162,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":183,"column":58},"generated":{"line":162,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":184,"column":45},"generated":{"line":163,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":184,"column":58},"generated":{"line":163,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":187,"column":14},"generated":{"line":166,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":187,"column":27},"generated":{"line":166,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":190,"column":32},"generated":{"line":169,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":190,"column":54},"generated":{"line":169,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":191,"column":16},"generated":{"line":170,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":191,"column":40},"generated":{"line":170,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":191,"column":45},"generated":{"line":170,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":191,"column":46},"generated":{"line":170,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":199,"column":14},"generated":{"line":178,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":199,"column":27},"generated":{"line":178,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":200,"column":23},"generated":{"line":179,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":200,"column":47},"generated":{"line":179,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":200,"column":52},"generated":{"line":179,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":200,"column":53},"generated":{"line":179,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":203,"column":41},"generated":{"line":182,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":203,"column":54},"generated":{"line":182,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":208,"column":14},"generated":{"line":187,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":208,"column":27},"generated":{"line":187,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":209,"column":23},"generated":{"line":188,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":209,"column":47},"generated":{"line":188,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":209,"column":52},"generated":{"line":188,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":209,"column":53},"generated":{"line":188,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":212,"column":41},"generated":{"line":191,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":212,"column":54},"generated":{"line":191,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":213,"column":45},"generated":{"line":192,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":213,"column":58},"generated":{"line":192,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":217,"column":14},"generated":{"line":196,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":217,"column":27},"generated":{"line":196,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":220,"column":20},"generated":{"line":199,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":220,"column":31},"generated":{"line":199,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":222,"column":5},"generated":{"line":201,"column":5}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":223,"column":2},"generated":{"line":202,"column":2}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":224,"column":1},"generated":{"line":204,"column":0}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":226,"column":6},"generated":{"line":205,"column":0}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":226,"column":13},"generated":{"line":205,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":205,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":205,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":206,"column":2}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":206,"column":13}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":232,"column":6},"generated":{"line":206,"column":14}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":232,"column":39},"generated":{"line":206,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":232,"column":41},"generated":{"line":206,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":232,"column":62},"generated":{"line":206,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":6},"generated":{"line":206,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":31},"generated":{"line":206,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":33},"generated":{"line":206,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":49},"generated":{"line":206,"column":68}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":52},"generated":{"line":206,"column":71}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":233,"column":57},"generated":{"line":206,"column":76}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":234,"column":6},"generated":{"line":206,"column":78}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":234,"column":25},"generated":{"line":206,"column":97}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":234,"column":28},"generated":{"line":206,"column":100}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":234,"column":33},"generated":{"line":206,"column":105}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":234,"column":33},"generated":{"line":206,"column":107}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":2},"generated":{"line":207,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":2},"generated":{"line":207,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":2},"generated":{"line":207,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":15},"generated":{"line":207,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":18},"generated":{"line":207,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":19},"generated":{"line":207,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":22},"generated":{"line":207,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":227,"column":23},"generated":{"line":207,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":4},"generated":{"line":208,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":8},"generated":{"line":208,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":16},"generated":{"line":208,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":21},"generated":{"line":208,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":26},"generated":{"line":208,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":30},"generated":{"line":208,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":46},"generated":{"line":208,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":235,"column":48},"generated":{"line":208,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":6},"generated":{"line":209,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":12},"generated":{"line":209,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":16},"generated":{"line":209,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":21},"generated":{"line":209,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":22},"generated":{"line":209,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":66},"generated":{"line":209,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":236,"column":67},"generated":{"line":209,"column":67}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":4},"generated":{"line":211,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":10},"generated":{"line":211,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":21},"generated":{"line":211,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":24},"generated":{"line":211,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":32},"generated":{"line":211,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":33},"generated":{"line":211,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":239,"column":44},"generated":{"line":211,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":4},"generated":{"line":212,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":10},"generated":{"line":212,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":21},"generated":{"line":212,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":24},"generated":{"line":212,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":32},"generated":{"line":212,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":33},"generated":{"line":212,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":240,"column":44},"generated":{"line":212,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":4},"generated":{"line":213,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":10},"generated":{"line":213,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":22},"generated":{"line":213,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":25},"generated":{"line":213,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":33},"generated":{"line":213,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":34},"generated":{"line":213,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":241,"column":46},"generated":{"line":213,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":4},"generated":{"line":214,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":10},"generated":{"line":214,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":21},"generated":{"line":214,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":24},"generated":{"line":214,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":32},"generated":{"line":214,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":33},"generated":{"line":214,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":242,"column":44},"generated":{"line":214,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":4},"generated":{"line":215,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":10},"generated":{"line":215,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":23},"generated":{"line":215,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":26},"generated":{"line":215,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":34},"generated":{"line":215,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":35},"generated":{"line":215,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":243,"column":48},"generated":{"line":215,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":4},"generated":{"line":216,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":10},"generated":{"line":216,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":24},"generated":{"line":216,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":27},"generated":{"line":216,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":35},"generated":{"line":216,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":36},"generated":{"line":216,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":244,"column":50},"generated":{"line":216,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":4},"generated":{"line":217,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":10},"generated":{"line":217,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":23},"generated":{"line":217,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":26},"generated":{"line":217,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":34},"generated":{"line":217,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":35},"generated":{"line":217,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":245,"column":48},"generated":{"line":217,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":218,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":10},"generated":{"line":218,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":30},"generated":{"line":218,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":33},"generated":{"line":218,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":41},"generated":{"line":218,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":42},"generated":{"line":218,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":246,"column":62},"generated":{"line":218,"column":62}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":4},"generated":{"line":219,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":10},"generated":{"line":219,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":31},"generated":{"line":219,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":34},"generated":{"line":219,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":42},"generated":{"line":219,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":43},"generated":{"line":219,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":247,"column":64},"generated":{"line":219,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":220,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":10},"generated":{"line":220,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":30},"generated":{"line":220,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":33},"generated":{"line":220,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":41},"generated":{"line":220,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":42},"generated":{"line":220,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":248,"column":62},"generated":{"line":220,"column":62}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":4},"generated":{"line":221,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":10},"generated":{"line":221,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":18},"generated":{"line":221,"column":18}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":21},"generated":{"line":221,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":29},"generated":{"line":221,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":30},"generated":{"line":221,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":37},"generated":{"line":221,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":38},"generated":{"line":221,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":250,"column":43},"generated":{"line":221,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":4},"generated":{"line":222,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":10},"generated":{"line":222,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":16},"generated":{"line":222,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":19},"generated":{"line":222,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":27},"generated":{"line":222,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":28},"generated":{"line":222,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":35},"generated":{"line":222,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":36},"generated":{"line":222,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":251,"column":39},"generated":{"line":222,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":4},"generated":{"line":223,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":10},"generated":{"line":223,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":17},"generated":{"line":223,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":20},"generated":{"line":223,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":28},"generated":{"line":223,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":29},"generated":{"line":223,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":36},"generated":{"line":223,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":37},"generated":{"line":223,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":252,"column":41},"generated":{"line":223,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":4},"generated":{"line":224,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":8},"generated":{"line":224,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":9},"generated":{"line":224,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":20},"generated":{"line":224,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":23},"generated":{"line":224,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":31},"generated":{"line":224,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":32},"generated":{"line":224,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":253,"column":40},"generated":{"line":224,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":4},"generated":{"line":225,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":10},"generated":{"line":225,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":19},"generated":{"line":225,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":22},"generated":{"line":225,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":30},"generated":{"line":225,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":35},"generated":{"line":225,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":255,"column":40},"generated":{"line":225,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":226,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":257,"column":8},"generated":{"line":226,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":257,"column":27},"generated":{"line":226,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":257,"column":30},"generated":{"line":226,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":257,"column":35},"generated":{"line":226,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":258,"column":4},"generated":{"line":227,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":258,"column":8},"generated":{"line":227,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":258,"column":9},"generated":{"line":227,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":258,"column":18},"generated":{"line":227,"column":18}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":258,"column":20},"generated":{"line":227,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":259,"column":6},"generated":{"line":228,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":260,"column":6},"generated":{"line":229,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":260,"column":25},"generated":{"line":229,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":260,"column":28},"generated":{"line":229,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":260,"column":42},"generated":{"line":229,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":263,"column":4},"generated":{"line":231,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":263,"column":8},"generated":{"line":231,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":263,"column":24},"generated":{"line":231,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":263,"column":26},"generated":{"line":231,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":264,"column":6},"generated":{"line":232,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":264,"column":12},"generated":{"line":232,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":264,"column":21},"generated":{"line":232,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":264,"column":24},"generated":{"line":232,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":264,"column":28},"generated":{"line":232,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":266,"column":6},"generated":{"line":233,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":266,"column":10},"generated":{"line":233,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":266,"column":11},"generated":{"line":233,"column":11}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":266,"column":19},"generated":{"line":233,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":266,"column":22},"generated":{"line":233,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":20},"generated":{"line":235,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":31},"generated":{"line":235,"column":31}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":36},"generated":{"line":235,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":48},"generated":{"line":235,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":53},"generated":{"line":235,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":268,"column":64},"generated":{"line":235,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":35},"generated":{"line":236,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":43},"generated":{"line":236,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":48},"generated":{"line":236,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":54},"generated":{"line":236,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":59},"generated":{"line":236,"column":59}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":269,"column":66},"generated":{"line":236,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":287,"column":34},"generated":{"line":254,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":287,"column":54},"generated":{"line":254,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":288,"column":22},"generated":{"line":255,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":288,"column":35},"generated":{"line":255,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":291,"column":34},"generated":{"line":258,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":291,"column":42},"generated":{"line":258,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":291,"column":43},"generated":{"line":258,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":291,"column":50},"generated":{"line":258,"column":50}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":295,"column":36},"generated":{"line":262,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":295,"column":57},"generated":{"line":262,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":296,"column":24},"generated":{"line":263,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":296,"column":38},"generated":{"line":263,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":299,"column":36},"generated":{"line":266,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":299,"column":44},"generated":{"line":266,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":299,"column":45},"generated":{"line":266,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":299,"column":53},"generated":{"line":266,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":303,"column":38},"generated":{"line":270,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":303,"column":58},"generated":{"line":270,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":304,"column":26},"generated":{"line":271,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":304,"column":39},"generated":{"line":271,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":307,"column":38},"generated":{"line":274,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":307,"column":46},"generated":{"line":274,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":307,"column":47},"generated":{"line":274,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":307,"column":54},"generated":{"line":274,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":317,"column":28},"generated":{"line":284,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":317,"column":37},"generated":{"line":284,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":321,"column":10},"generated":{"line":287,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":321,"column":26},"generated":{"line":287,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":322,"column":15},"generated":{"line":287,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":322,"column":34},"generated":{"line":287,"column":75}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":323,"column":19},"generated":{"line":287,"column":78}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":323,"column":33},"generated":{"line":287,"column":92}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":323,"column":41},"generated":{"line":287,"column":100}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":323,"column":42},"generated":{"line":287,"column":101}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":323,"column":49},"generated":{"line":287,"column":108}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":23},"generated":{"line":287,"column":120}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":31},"generated":{"line":287,"column":128}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":32},"generated":{"line":287,"column":129}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":40},"generated":{"line":287,"column":137}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":52},"generated":{"line":287,"column":149}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":60},"generated":{"line":287,"column":157}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":61},"generated":{"line":287,"column":158}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":324,"column":68},"generated":{"line":287,"column":165}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":325,"column":23},"generated":{"line":287,"column":177}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":325,"column":31},"generated":{"line":287,"column":185}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":325,"column":32},"generated":{"line":287,"column":186}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":325,"column":42},"generated":{"line":287,"column":196}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":325,"column":49},"generated":{"line":287,"column":203}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":326,"column":19},"generated":{"line":287,"column":206}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":326,"column":29},"generated":{"line":287,"column":216}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":326,"column":37},"generated":{"line":287,"column":224}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":326,"column":38},"generated":{"line":287,"column":225}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":326,"column":46},"generated":{"line":287,"column":233}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":23},"generated":{"line":287,"column":245}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":31},"generated":{"line":287,"column":253}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":32},"generated":{"line":287,"column":254}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":39},"generated":{"line":287,"column":261}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":51},"generated":{"line":287,"column":273}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":59},"generated":{"line":287,"column":281}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":60},"generated":{"line":287,"column":282}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":70},"generated":{"line":287,"column":292}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":327,"column":77},"generated":{"line":287,"column":299}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":328,"column":14},"generated":{"line":287,"column":302}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":328,"column":22},"generated":{"line":287,"column":310}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":328,"column":43},"generated":{"line":287,"column":331}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":328,"column":49},"generated":{"line":287,"column":337}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":328,"column":69},"generated":{"line":287,"column":357}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":329,"column":29},"generated":{"line":288,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":329,"column":49},"generated":{"line":288,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":329,"column":56},"generated":{"line":288,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":336,"column":7},"generated":{"line":295,"column":7}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":337,"column":6},"generated":{"line":296,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":340,"column":4},"generated":{"line":298,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":340,"column":10},"generated":{"line":298,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":340,"column":19},"generated":{"line":298,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":340,"column":22},"generated":{"line":298,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":340,"column":27},"generated":{"line":298,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":4},"generated":{"line":299,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":8},"generated":{"line":299,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":19},"generated":{"line":299,"column":19}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":22},"generated":{"line":299,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":25},"generated":{"line":299,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":33},"generated":{"line":299,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":37},"generated":{"line":299,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":45},"generated":{"line":299,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":49},"generated":{"line":299,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":57},"generated":{"line":299,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":342,"column":60},"generated":{"line":299,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":343,"column":8},"generated":{"line":299,"column":63}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":343,"column":75},"generated":{"line":299,"column":130}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":4},"generated":{"line":300,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":8},"generated":{"line":300,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":16},"generated":{"line":300,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":300,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":26},"generated":{"line":300,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":344,"column":28},"generated":{"line":300,"column":28}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":345,"column":6},"generated":{"line":301,"column":6}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":345,"column":17},"generated":{"line":301,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":345,"column":20},"generated":{"line":301,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":345,"column":38},"generated":{"line":301,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":4},"generated":{"line":303,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":10},"generated":{"line":303,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":32},"generated":{"line":303,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":35},"generated":{"line":303,"column":35}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":39},"generated":{"line":303,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":40},"generated":{"line":303,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":45},"generated":{"line":303,"column":45}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":46},"generated":{"line":303,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":57},"generated":{"line":303,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":60},"generated":{"line":303,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":61},"generated":{"line":303,"column":61}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":62},"generated":{"line":303,"column":62}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":65},"generated":{"line":303,"column":65}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":348,"column":66},"generated":{"line":303,"column":66}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":4},"generated":{"line":304,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":10},"generated":{"line":304,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":34},"generated":{"line":304,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":37},"generated":{"line":304,"column":37}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":48},"generated":{"line":304,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":51},"generated":{"line":304,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":349,"column":52},"generated":{"line":304,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":351,"column":4},"generated":{"line":305,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":351,"column":10},"generated":{"line":305,"column":10}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":351,"column":23},"generated":{"line":305,"column":23}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":351,"column":26},"generated":{"line":305,"column":26}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":352,"column":12},"generated":{"line":306,"column":12}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":352,"column":21},"generated":{"line":306,"column":21}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":355,"column":24},"generated":{"line":309,"column":24}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":355,"column":33},"generated":{"line":309,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":357,"column":5},"generated":{"line":311,"column":5}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":312,"column":4}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":359,"column":8},"generated":{"line":312,"column":8}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":359,"column":9},"generated":{"line":312,"column":9}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":359,"column":17},"generated":{"line":312,"column":17}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":359,"column":20},"generated":{"line":312,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":16},"generated":{"line":314,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":27},"generated":{"line":314,"column":27}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":32},"generated":{"line":314,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":44},"generated":{"line":314,"column":44}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":49},"generated":{"line":314,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":361,"column":60},"generated":{"line":314,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":33},"generated":{"line":315,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":41},"generated":{"line":315,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":46},"generated":{"line":315,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":52},"generated":{"line":315,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":57},"generated":{"line":315,"column":57}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":362,"column":64},"generated":{"line":315,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":363,"column":42},"generated":{"line":316,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":363,"column":61},"generated":{"line":316,"column":61}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":369,"column":30},"generated":{"line":322,"column":30}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":369,"column":38},"generated":{"line":322,"column":38}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":369,"column":39},"generated":{"line":322,"column":39}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":369,"column":46},"generated":{"line":322,"column":46}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":388,"column":34},"generated":{"line":341,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":388,"column":53},"generated":{"line":341,"column":53}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":392,"column":32},"generated":{"line":345,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":392,"column":52},"generated":{"line":345,"column":52}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":393,"column":20},"generated":{"line":346,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":393,"column":33},"generated":{"line":346,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":396,"column":32},"generated":{"line":349,"column":32}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":396,"column":40},"generated":{"line":349,"column":40}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":396,"column":41},"generated":{"line":349,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":396,"column":48},"generated":{"line":349,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":400,"column":34},"generated":{"line":353,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":400,"column":55},"generated":{"line":353,"column":55}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":401,"column":20},"generated":{"line":354,"column":20}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":401,"column":34},"generated":{"line":354,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":404,"column":34},"generated":{"line":357,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":404,"column":42},"generated":{"line":357,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":404,"column":43},"generated":{"line":357,"column":43}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":404,"column":51},"generated":{"line":357,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":408,"column":36},"generated":{"line":361,"column":36}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":408,"column":58},"generated":{"line":361,"column":58}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":409,"column":41},"generated":{"line":362,"column":41}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":409,"column":54},"generated":{"line":362,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":413,"column":47},"generated":{"line":366,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":413,"column":60},"generated":{"line":366,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":414,"column":51},"generated":{"line":367,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":414,"column":64},"generated":{"line":367,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":415,"column":51},"generated":{"line":368,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":415,"column":64},"generated":{"line":368,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":418,"column":16},"generated":{"line":371,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":418,"column":29},"generated":{"line":371,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":421,"column":34},"generated":{"line":374,"column":34}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":421,"column":56},"generated":{"line":374,"column":56}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":422,"column":18},"generated":{"line":375,"column":18}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":422,"column":42},"generated":{"line":375,"column":42}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":422,"column":47},"generated":{"line":375,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":422,"column":48},"generated":{"line":375,"column":48}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":430,"column":16},"generated":{"line":383,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":430,"column":29},"generated":{"line":383,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":431,"column":25},"generated":{"line":384,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":431,"column":49},"generated":{"line":384,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":431,"column":54},"generated":{"line":384,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":431,"column":55},"generated":{"line":384,"column":55}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":434,"column":47},"generated":{"line":387,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":434,"column":60},"generated":{"line":387,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":439,"column":16},"generated":{"line":392,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":439,"column":29},"generated":{"line":392,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":440,"column":25},"generated":{"line":393,"column":25}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":440,"column":49},"generated":{"line":393,"column":49}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":440,"column":54},"generated":{"line":393,"column":54}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":440,"column":55},"generated":{"line":393,"column":55}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":443,"column":47},"generated":{"line":396,"column":47}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":443,"column":60},"generated":{"line":396,"column":60}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":444,"column":51},"generated":{"line":397,"column":51}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":444,"column":64},"generated":{"line":397,"column":64}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":448,"column":16},"generated":{"line":401,"column":16}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":448,"column":29},"generated":{"line":401,"column":29}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":451,"column":22},"generated":{"line":404,"column":22}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":451,"column":33},"generated":{"line":404,"column":33}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":454,"column":5},"generated":{"line":407,"column":5}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":455,"column":2},"generated":{"line":408,"column":2}},{"source":"../src/pool_gpu.ts","name":null,"original":{"line":456,"column":1},"generated":{"line":410,"column":0}}],"sources":{"../src/pool_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Pool2DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv2DInfo, poolType: 'max'|'avg',\n      computePositions: boolean, flattenPositions = false,\n      includeBatchInIndex = false) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n    const batchFlattenPositionStr = `((batch  * ${convInfo.inHeight} + xR) * ${\n        convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n    const flattenPositionStr =\n        `(xR * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${\n          flattenPositions ? (includeBatchInIndex ? batchFlattenPositionStr :\n                                                    flattenPositionStr) :\n                             `wR * ${effectiveFilterWidth} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n\nexport class Pool3DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv3DInfo, poolType: 'max'|'avg',\n      computePositions: boolean, flattenPositions = false,\n      includeBatchInIndex = false) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec3 strides =\n            ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n        const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${effectiveFilterDepth};\n              wD += ${dilationDepth}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${effectiveFilterHeight};\n                wR += ${dilationHeight}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${effectiveFilterWidth};\n                  wC += ${dilationWidth}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${compareOp} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${\n          flattenPositions ?\n              (includeBatchInIndex ?\n                   `(((batch * ${convInfo.inDepth} + xD) * ${\n                       convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${\n                       convInfo.inChannels} + ch` :\n                   `((xD * ${convInfo.inHeight} + xR) * ${\n                       convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch`) :\n              `wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                      wR * ${effectiveFilterWidth} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec3 strides =\n        ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${dilationWidth}, ch)\n              );\n\n              ${updateSnippet}\n            }\n\n            int xC = xCCorner + ${filterWidthNearestVec4};\n            if (${filterWidthVec4Remainder === 1}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 2}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 3}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                initializationValue\n              );\n\n              ${updateSnippet}\n            }\n          }\n          setOutput(${returnValue});\n        }\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"aeae7c94343e5b53cf6cc394ef6bd130","cacheData":{"env":{}}}