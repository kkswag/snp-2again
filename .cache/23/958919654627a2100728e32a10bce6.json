{"id":"src/util.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":20,"index":724},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/src/util.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./params","loc":{"line":18,"column":43,"index":792},"parent":"/Applications/XAMPP/xamppfiles/htdocs/test/src/util.js","resolved":"/Applications/XAMPP/xamppfiles/htdocs/test/src/params.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAndroid = isAndroid;\nexports.isMobile = isMobile;\nexports.isiOS = isiOS;\nexports.setBackendAndEnvFlags = setBackendAndEnvFlags;\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs-core\"));\nvar _params = require(\"./params\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\nfunction isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\nfunction isMobile() {\n  return isAndroid() || isiOS();\n}\n\n/**\n * Reset the target backend.\n *\n * @param backendName The name of the backend to be reset.\n */\nfunction resetBackend(_x) {\n  return _resetBackend.apply(this, arguments);\n}\n/**\n * Set environment flags.\n *\n * This is a wrapper function of `tf.env().setFlags()` to constrain users to\n * only set tunable flags (the keys of `TUNABLE_FLAG_TYPE_MAP`).\n *\n * ```js\n * const flagConfig = {\n *        WEBGL_PACK: false,\n *      };\n * await setEnvFlags(flagConfig);\n *\n * console.log(tf.env().getBool('WEBGL_PACK')); // false\n * console.log(tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')); // false\n * ```\n *\n * @param flagConfig An object to store flag-value pairs.\n */\nfunction _resetBackend() {\n  _resetBackend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(backendName) {\n    var ENGINE, backendFactory;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ENGINE = tf.engine();\n            if (backendName in ENGINE.registryFactory) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error(\"\".concat(backendName, \" backend is not registed.\"));\n          case 3:\n            if (backendName in ENGINE.registry) {\n              backendFactory = tf.findBackendFactory(backendName);\n              tf.removeBackend(backendName);\n              tf.registerBackend(backendName, backendFactory);\n            }\n            _context.next = 6;\n            return tf.setBackend(backendName);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _resetBackend.apply(this, arguments);\n}\nfunction setBackendAndEnvFlags(_x2, _x3) {\n  return _setBackendAndEnvFlags.apply(this, arguments);\n}\nfunction _setBackendAndEnvFlags() {\n  _setBackendAndEnvFlags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(flagConfig, backend) {\n    var flag, _backend$split, _backend$split2, runtime, $backend;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(flagConfig == null)) {\n              _context2.next = 4;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 4:\n            if (!(_typeof(flagConfig) !== 'object')) {\n              _context2.next = 6;\n              break;\n            }\n            throw new Error(\"An object is expected, while a(n) \".concat(_typeof(flagConfig), \" is found.\"));\n          case 6:\n            _context2.t0 = _regeneratorRuntime().keys(flagConfig);\n          case 7:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 15;\n              break;\n            }\n            flag = _context2.t1.value;\n            if (flag in _params.TUNABLE_FLAG_VALUE_RANGE_MAP) {\n              _context2.next = 11;\n              break;\n            }\n            throw new Error(\"\".concat(flag, \" is not a tunable or valid environment flag.\"));\n          case 11:\n            if (!(_params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag].indexOf(flagConfig[flag]) === -1)) {\n              _context2.next = 13;\n              break;\n            }\n            throw new Error(\"\".concat(flag, \" value is expected to be in the range [\").concat(_params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag], \"], while \").concat(flagConfig[flag]) + ' is found.');\n          case 13:\n            _context2.next = 7;\n            break;\n          case 15:\n            tf.env().setFlags(flagConfig);\n            _backend$split = backend.split('-'), _backend$split2 = _slicedToArray(_backend$split, 2), runtime = _backend$split2[0], $backend = _backend$split2[1];\n            if (!(runtime === 'tfjs')) {\n              _context2.next = 20;\n              break;\n            }\n            _context2.next = 20;\n            return resetBackend($backend);\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _setBackendAndEnvFlags.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"src/util.js","original":{"line":17,"column":0}},{"generated":{"line":11,"column":0},"source":"src/util.js","original":{"line":18,"column":0}},{"generated":{"line":12,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":13,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":14,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":15,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":16,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":17,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":18,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":19,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":20,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":21,"column":0},"source":"src/util.js","original":{"line":18,"column":54}},{"generated":{"line":21,"column":47},"source":"src/util.js","original":{"line":2,"column":0}},{"generated":{"line":22,"column":0},"source":"src/util.js","original":{"line":2,"column":0}},{"generated":{"line":23,"column":0},"source":"src/util.js","original":{"line":2,"column":0}},{"generated":{"line":24,"column":0},"source":"src/util.js","original":{"line":20,"column":7}},{"generated":{"line":24,"column":9},"source":"src/util.js","original":{"line":20,"column":16},"name":"isiOS"},{"generated":{"line":24,"column":14},"source":"src/util.js","original":{"line":20,"column":21}},{"generated":{"line":24,"column":17},"source":"src/util.js","original":{"line":20,"column":24}},{"generated":{"line":25,"column":2},"source":"src/util.js","original":{"line":21,"column":2}},{"generated":{"line":25,"column":9},"source":"src/util.js","original":{"line":21,"column":9}},{"generated":{"line":25,"column":28},"source":"src/util.js","original":{"line":21,"column":28}},{"generated":{"line":25,"column":29},"source":"src/util.js","original":{"line":21,"column":29},"name":"test"},{"generated":{"line":25,"column":33},"source":"src/util.js","original":{"line":21,"column":33}},{"generated":{"line":25,"column":34},"source":"src/util.js","original":{"line":21,"column":34},"name":"navigator"},{"generated":{"line":25,"column":43},"source":"src/util.js","original":{"line":21,"column":43}},{"generated":{"line":25,"column":44},"source":"src/util.js","original":{"line":21,"column":44},"name":"userAgent"},{"generated":{"line":25,"column":53},"source":"src/util.js","original":{"line":21,"column":53}},{"generated":{"line":25,"column":54},"source":"src/util.js","original":{"line":21,"column":54}},{"generated":{"line":26,"column":0},"source":"src/util.js","original":{"line":22,"column":0}},{"generated":{"line":27,"column":0},"source":"src/util.js","original":{"line":24,"column":7}},{"generated":{"line":27,"column":9},"source":"src/util.js","original":{"line":24,"column":16},"name":"isAndroid"},{"generated":{"line":27,"column":18},"source":"src/util.js","original":{"line":24,"column":25}},{"generated":{"line":27,"column":21},"source":"src/util.js","original":{"line":24,"column":28}},{"generated":{"line":28,"column":2},"source":"src/util.js","original":{"line":25,"column":2}},{"generated":{"line":28,"column":9},"source":"src/util.js","original":{"line":25,"column":9}},{"generated":{"line":28,"column":19},"source":"src/util.js","original":{"line":25,"column":19}},{"generated":{"line":28,"column":20},"source":"src/util.js","original":{"line":25,"column":20},"name":"test"},{"generated":{"line":28,"column":24},"source":"src/util.js","original":{"line":25,"column":24}},{"generated":{"line":28,"column":25},"source":"src/util.js","original":{"line":25,"column":25},"name":"navigator"},{"generated":{"line":28,"column":34},"source":"src/util.js","original":{"line":25,"column":34}},{"generated":{"line":28,"column":35},"source":"src/util.js","original":{"line":25,"column":35},"name":"userAgent"},{"generated":{"line":28,"column":44},"source":"src/util.js","original":{"line":25,"column":44}},{"generated":{"line":28,"column":45},"source":"src/util.js","original":{"line":25,"column":45}},{"generated":{"line":29,"column":0},"source":"src/util.js","original":{"line":26,"column":0}},{"generated":{"line":30,"column":0},"source":"src/util.js","original":{"line":28,"column":7}},{"generated":{"line":30,"column":9},"source":"src/util.js","original":{"line":28,"column":16},"name":"isMobile"},{"generated":{"line":30,"column":17},"source":"src/util.js","original":{"line":28,"column":24}},{"generated":{"line":30,"column":20},"source":"src/util.js","original":{"line":28,"column":27}},{"generated":{"line":31,"column":2},"source":"src/util.js","original":{"line":29,"column":2}},{"generated":{"line":31,"column":9},"source":"src/util.js","original":{"line":29,"column":9},"name":"isAndroid"},{"generated":{"line":31,"column":18},"source":"src/util.js","original":{"line":29,"column":18}},{"generated":{"line":31,"column":20},"source":"src/util.js","original":{"line":29,"column":20}},{"generated":{"line":31,"column":24},"source":"src/util.js","original":{"line":29,"column":24},"name":"isiOS"},{"generated":{"line":31,"column":29},"source":"src/util.js","original":{"line":29,"column":29}},{"generated":{"line":31,"column":31},"source":"src/util.js","original":{"line":29,"column":31}},{"generated":{"line":32,"column":0},"source":"src/util.js","original":{"line":30,"column":0}},{"generated":{"line":34,"column":0},"source":"src/util.js","original":{"line":32,"column":0}},{"generated":{"line":35,"column":0},"source":"src/util.js","original":{"line":33,"column":0}},{"generated":{"line":36,"column":0},"source":"src/util.js","original":{"line":34,"column":0}},{"generated":{"line":37,"column":0},"source":"src/util.js","original":{"line":35,"column":0}},{"generated":{"line":38,"column":0},"source":"src/util.js","original":{"line":36,"column":0}},{"generated":{"line":39,"column":0},"source":"src/util.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":9},"source":"src/util.js","original":{"line":37,"column":15},"name":"resetBackend"},{"generated":{"line":39,"column":21},"source":"src/util.js","original":{"line":37,"column":27}},{"generated":{"line":40,"column":2},"source":"src/util.js","original":{"line":37,"column":27}},{"generated":{"line":41,"column":0},"source":"src/util.js","original":{"line":37,"column":27}},{"generated":{"line":42,"column":0},"source":"src/util.js","original":{"line":52,"column":0}},{"generated":{"line":43,"column":0},"source":"src/util.js","original":{"line":53,"column":0}},{"generated":{"line":44,"column":0},"source":"src/util.js","original":{"line":54,"column":0}},{"generated":{"line":45,"column":0},"source":"src/util.js","original":{"line":55,"column":0}},{"generated":{"line":46,"column":0},"source":"src/util.js","original":{"line":56,"column":0}},{"generated":{"line":47,"column":0},"source":"src/util.js","original":{"line":57,"column":0}},{"generated":{"line":48,"column":0},"source":"src/util.js","original":{"line":58,"column":0}},{"generated":{"line":49,"column":0},"source":"src/util.js","original":{"line":59,"column":0}},{"generated":{"line":50,"column":0},"source":"src/util.js","original":{"line":60,"column":0}},{"generated":{"line":51,"column":0},"source":"src/util.js","original":{"line":61,"column":0}},{"generated":{"line":52,"column":0},"source":"src/util.js","original":{"line":62,"column":0}},{"generated":{"line":53,"column":0},"source":"src/util.js","original":{"line":63,"column":0}},{"generated":{"line":54,"column":0},"source":"src/util.js","original":{"line":64,"column":0}},{"generated":{"line":55,"column":0},"source":"src/util.js","original":{"line":65,"column":0}},{"generated":{"line":56,"column":0},"source":"src/util.js","original":{"line":66,"column":0}},{"generated":{"line":57,"column":0},"source":"src/util.js","original":{"line":67,"column":0}},{"generated":{"line":58,"column":0},"source":"src/util.js","original":{"line":68,"column":0}},{"generated":{"line":59,"column":0},"source":"src/util.js","original":{"line":69,"column":0}},{"generated":{"line":60,"column":0},"source":"src/util.js","original":{"line":52,"column":0}},{"generated":{"line":61,"column":2},"source":"src/util.js","original":{"line":52,"column":0}},{"generated":{"line":61,"column":77},"source":"src/util.js","original":{"line":37,"column":0}},{"generated":{"line":61,"column":94},"source":"src/util.js","original":{"line":37,"column":28},"name":"backendName"},{"generated":{"line":61,"column":105},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":62,"column":4},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":63,"column":4},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":64,"column":6},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":65,"column":8},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":66,"column":10},"source":"src/util.js","original":{"line":37,"column":39}},{"generated":{"line":67,"column":12},"source":"src/util.js","original":{"line":38,"column":8},"name":"ENGINE"},{"generated":{"line":67,"column":18},"source":"src/util.js","original":{"line":38,"column":14}},{"generated":{"line":67,"column":21},"source":"src/util.js","original":{"line":38,"column":17},"name":"tf"},{"generated":{"line":67,"column":23},"source":"src/util.js","original":{"line":38,"column":19}},{"generated":{"line":67,"column":24},"source":"src/util.js","original":{"line":38,"column":20},"name":"engine"},{"generated":{"line":67,"column":30},"source":"src/util.js","original":{"line":38,"column":26}},{"generated":{"line":67,"column":32},"source":"src/util.js","original":{"line":38,"column":28}},{"generated":{"line":68,"column":12},"source":"src/util.js","original":{"line":38,"column":28}},{"generated":{"line":68,"column":16},"source":"src/util.js","original":{"line":39,"column":8},"name":"backendName"},{"generated":{"line":68,"column":27},"source":"src/util.js","original":{"line":39,"column":19}},{"generated":{"line":68,"column":31},"source":"src/util.js","original":{"line":39,"column":23},"name":"ENGINE"},{"generated":{"line":68,"column":37},"source":"src/util.js","original":{"line":39,"column":29}},{"generated":{"line":68,"column":38},"source":"src/util.js","original":{"line":39,"column":30},"name":"registryFactory"},{"generated":{"line":68,"column":53},"source":"src/util.js","original":{"line":39,"column":45}},{"generated":{"line":69,"column":14},"source":"src/util.js","original":{"line":39,"column":45}},{"generated":{"line":70,"column":14},"source":"src/util.js","original":{"line":39,"column":45}},{"generated":{"line":71,"column":12},"source":"src/util.js","original":{"line":39,"column":45}},{"generated":{"line":72,"column":12},"source":"src/util.js","original":{"line":39,"column":45}},{"generated":{"line":72,"column":18},"source":"src/util.js","original":{"line":40,"column":10}},{"generated":{"line":72,"column":22},"source":"src/util.js","original":{"line":40,"column":14},"name":"Error"},{"generated":{"line":72,"column":27},"source":"src/util.js","original":{"line":40,"column":19}},{"generated":{"line":72,"column":38},"source":"src/util.js","original":{"line":40,"column":23},"name":"backendName"},{"generated":{"line":72,"column":49},"source":"src/util.js","original":{"line":40,"column":34}},{"generated":{"line":72,"column":80},"source":"src/util.js","original":{"line":40,"column":62}},{"generated":{"line":73,"column":10},"source":"src/util.js","original":{"line":40,"column":62}},{"generated":{"line":74,"column":12},"source":"src/util.js","original":{"line":43,"column":2}},{"generated":{"line":74,"column":16},"source":"src/util.js","original":{"line":43,"column":6},"name":"backendName"},{"generated":{"line":74,"column":27},"source":"src/util.js","original":{"line":43,"column":17}},{"generated":{"line":74,"column":31},"source":"src/util.js","original":{"line":43,"column":21},"name":"ENGINE"},{"generated":{"line":74,"column":37},"source":"src/util.js","original":{"line":43,"column":27}},{"generated":{"line":74,"column":38},"source":"src/util.js","original":{"line":43,"column":28},"name":"registry"},{"generated":{"line":74,"column":46},"source":"src/util.js","original":{"line":43,"column":36}},{"generated":{"line":74,"column":48},"source":"src/util.js","original":{"line":43,"column":38}},{"generated":{"line":75,"column":14},"source":"src/util.js","original":{"line":44,"column":10},"name":"backendFactory"},{"generated":{"line":75,"column":28},"source":"src/util.js","original":{"line":44,"column":24}},{"generated":{"line":75,"column":31},"source":"src/util.js","original":{"line":44,"column":27},"name":"tf"},{"generated":{"line":75,"column":33},"source":"src/util.js","original":{"line":44,"column":29}},{"generated":{"line":75,"column":34},"source":"src/util.js","original":{"line":44,"column":30},"name":"findBackendFactory"},{"generated":{"line":75,"column":52},"source":"src/util.js","original":{"line":44,"column":48}},{"generated":{"line":75,"column":53},"source":"src/util.js","original":{"line":44,"column":49},"name":"backendName"},{"generated":{"line":75,"column":64},"source":"src/util.js","original":{"line":44,"column":60}},{"generated":{"line":75,"column":65},"source":"src/util.js","original":{"line":44,"column":61}},{"generated":{"line":76,"column":14},"source":"src/util.js","original":{"line":45,"column":4},"name":"tf"},{"generated":{"line":76,"column":16},"source":"src/util.js","original":{"line":45,"column":6}},{"generated":{"line":76,"column":17},"source":"src/util.js","original":{"line":45,"column":7},"name":"removeBackend"},{"generated":{"line":76,"column":30},"source":"src/util.js","original":{"line":45,"column":20}},{"generated":{"line":76,"column":31},"source":"src/util.js","original":{"line":45,"column":21},"name":"backendName"},{"generated":{"line":76,"column":42},"source":"src/util.js","original":{"line":45,"column":32}},{"generated":{"line":76,"column":43},"source":"src/util.js","original":{"line":45,"column":33}},{"generated":{"line":77,"column":14},"source":"src/util.js","original":{"line":46,"column":4},"name":"tf"},{"generated":{"line":77,"column":16},"source":"src/util.js","original":{"line":46,"column":6}},{"generated":{"line":77,"column":17},"source":"src/util.js","original":{"line":46,"column":7},"name":"registerBackend"},{"generated":{"line":77,"column":32},"source":"src/util.js","original":{"line":46,"column":22}},{"generated":{"line":77,"column":33},"source":"src/util.js","original":{"line":46,"column":23},"name":"backendName"},{"generated":{"line":77,"column":44},"source":"src/util.js","original":{"line":46,"column":34}},{"generated":{"line":77,"column":46},"source":"src/util.js","original":{"line":46,"column":36},"name":"backendFactory"},{"generated":{"line":77,"column":60},"source":"src/util.js","original":{"line":46,"column":50}},{"generated":{"line":77,"column":61},"source":"src/util.js","original":{"line":46,"column":51}},{"generated":{"line":78,"column":12},"source":"src/util.js","original":{"line":47,"column":2}},{"generated":{"line":79,"column":12},"source":"src/util.js","original":{"line":47,"column":3}},{"generated":{"line":80,"column":12},"source":"src/util.js","original":{"line":47,"column":3}},{"generated":{"line":80,"column":19},"source":"src/util.js","original":{"line":49,"column":8},"name":"tf"},{"generated":{"line":80,"column":21},"source":"src/util.js","original":{"line":49,"column":10}},{"generated":{"line":80,"column":22},"source":"src/util.js","original":{"line":49,"column":11},"name":"setBackend"},{"generated":{"line":80,"column":32},"source":"src/util.js","original":{"line":49,"column":21}},{"generated":{"line":80,"column":33},"source":"src/util.js","original":{"line":49,"column":22},"name":"backendName"},{"generated":{"line":80,"column":44},"source":"src/util.js","original":{"line":49,"column":33}},{"generated":{"line":80,"column":45},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":81,"column":10},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":82,"column":10},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":83,"column":12},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":84,"column":8},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":85,"column":6},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":86,"column":4},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":87,"column":2},"source":"src/util.js","original":{"line":49,"column":34}},{"generated":{"line":87,"column":3},"source":"src/util.js","original":{"line":50,"column":1}},{"generated":{"line":88,"column":2},"source":"src/util.js","original":{"line":50,"column":1}},{"generated":{"line":89,"column":0},"source":"src/util.js","original":{"line":50,"column":1}},{"generated":{"line":90,"column":0},"source":"src/util.js","original":{"line":50,"column":1}},{"generated":{"line":90,"column":9},"source":"src/util.js","original":{"line":70,"column":22},"name":"setBackendAndEnvFlags"},{"generated":{"line":90,"column":30},"source":"src/util.js","original":{"line":70,"column":43}},{"generated":{"line":91,"column":2},"source":"src/util.js","original":{"line":70,"column":43}},{"generated":{"line":92,"column":0},"source":"src/util.js","original":{"line":70,"column":43}},{"generated":{"line":93,"column":0},"source":"src/util.js","original":{"line":70,"column":43}},{"generated":{"line":94,"column":2},"source":"src/util.js","original":{"line":70,"column":43}},{"generated":{"line":94,"column":86},"source":"src/util.js","original":{"line":70,"column":7}},{"generated":{"line":94,"column":104},"source":"src/util.js","original":{"line":70,"column":44},"name":"flagConfig"},{"generated":{"line":94,"column":114},"source":"src/util.js","original":{"line":70,"column":54}},{"generated":{"line":94,"column":116},"source":"src/util.js","original":{"line":70,"column":56},"name":"backend"},{"generated":{"line":94,"column":123},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":95,"column":4},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":96,"column":4},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":97,"column":6},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":98,"column":8},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":99,"column":10},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":100,"column":12},"source":"src/util.js","original":{"line":70,"column":63}},{"generated":{"line":100,"column":18},"source":"src/util.js","original":{"line":71,"column":6},"name":"flagConfig"},{"generated":{"line":100,"column":28},"source":"src/util.js","original":{"line":71,"column":16}},{"generated":{"line":100,"column":32},"source":"src/util.js","original":{"line":71,"column":20}},{"generated":{"line":100,"column":36},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":101,"column":14},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":102,"column":14},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":103,"column":12},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":104,"column":12},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":105,"column":10},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":106,"column":12},"source":"src/util.js","original":{"line":71,"column":24}},{"generated":{"line":106,"column":18},"source":"src/util.js","original":{"line":73,"column":13}},{"generated":{"line":106,"column":26},"source":"src/util.js","original":{"line":73,"column":20},"name":"flagConfig"},{"generated":{"line":106,"column":36},"source":"src/util.js","original":{"line":73,"column":30}},{"generated":{"line":106,"column":42},"source":"src/util.js","original":{"line":73,"column":35}},{"generated":{"line":106,"column":50},"source":"src/util.js","original":{"line":73,"column":43}},{"generated":{"line":107,"column":14},"source":"src/util.js","original":{"line":73,"column":43}},{"generated":{"line":108,"column":14},"source":"src/util.js","original":{"line":73,"column":43}},{"generated":{"line":109,"column":12},"source":"src/util.js","original":{"line":73,"column":43}},{"generated":{"line":110,"column":12},"source":"src/util.js","original":{"line":73,"column":43}},{"generated":{"line":110,"column":18},"source":"src/util.js","original":{"line":74,"column":10}},{"generated":{"line":110,"column":22},"source":"src/util.js","original":{"line":74,"column":14},"name":"Error"},{"generated":{"line":110,"column":27},"source":"src/util.js","original":{"line":74,"column":19}},{"generated":{"line":110,"column":80},"source":"src/util.js","original":{"line":75,"column":52},"name":"flagConfig"},{"generated":{"line":110,"column":90},"source":"src/util.js","original":{"line":75,"column":62}},{"generated":{"line":110,"column":107},"source":"src/util.js","original":{"line":75,"column":75}},{"generated":{"line":111,"column":10},"source":"src/util.js","original":{"line":75,"column":75}},{"generated":{"line":112,"column":12},"source":"src/util.js","original":{"line":75,"column":75}},{"generated":{"line":112,"column":54},"source":"src/util.js","original":{"line":79,"column":21},"name":"flagConfig"},{"generated":{"line":112,"column":64},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":113,"column":10},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":114,"column":12},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":115,"column":14},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":116,"column":14},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":117,"column":12},"source":"src/util.js","original":{"line":79,"column":31}},{"generated":{"line":118,"column":12},"source":"src/util.js","original":{"line":79,"column":13},"name":"flag"},{"generated":{"line":118,"column":16},"source":"src/util.js","original":{"line":79,"column":17}},{"generated":{"line":119,"column":12},"source":"src/util.js","original":{"line":79,"column":17}},{"generated":{"line":119,"column":16},"source":"src/util.js","original":{"line":81,"column":10},"name":"flag"},{"generated":{"line":119,"column":20},"source":"src/util.js","original":{"line":81,"column":14}},{"generated":{"line":119,"column":24},"source":"src/util.js","original":{"line":81,"column":18},"name":"TUNABLE_FLAG_VALUE_RANGE_MAP"},{"generated":{"line":119,"column":60},"source":"src/util.js","original":{"line":81,"column":46}},{"generated":{"line":120,"column":14},"source":"src/util.js","original":{"line":81,"column":46}},{"generated":{"line":121,"column":14},"source":"src/util.js","original":{"line":81,"column":46}},{"generated":{"line":122,"column":12},"source":"src/util.js","original":{"line":81,"column":46}},{"generated":{"line":123,"column":12},"source":"src/util.js","original":{"line":81,"column":46}},{"generated":{"line":123,"column":18},"source":"src/util.js","original":{"line":82,"column":12}},{"generated":{"line":123,"column":22},"source":"src/util.js","original":{"line":82,"column":16},"name":"Error"},{"generated":{"line":123,"column":27},"source":"src/util.js","original":{"line":82,"column":21}},{"generated":{"line":123,"column":38},"source":"src/util.js","original":{"line":82,"column":25},"name":"flag"},{"generated":{"line":123,"column":42},"source":"src/util.js","original":{"line":82,"column":29}},{"generated":{"line":123,"column":92},"source":"src/util.js","original":{"line":82,"column":76}},{"generated":{"line":124,"column":10},"source":"src/util.js","original":{"line":82,"column":76}},{"generated":{"line":125,"column":12},"source":"src/util.js","original":{"line":82,"column":76}},{"generated":{"line":125,"column":18},"source":"src/util.js","original":{"line":84,"column":8},"name":"TUNABLE_FLAG_VALUE_RANGE_MAP"},{"generated":{"line":125,"column":54},"source":"src/util.js","original":{"line":84,"column":36}},{"generated":{"line":125,"column":55},"source":"src/util.js","original":{"line":84,"column":37},"name":"flag"},{"generated":{"line":125,"column":59},"source":"src/util.js","original":{"line":84,"column":41}},{"generated":{"line":125,"column":60},"source":"src/util.js","original":{"line":84,"column":42}},{"generated":{"line":125,"column":61},"source":"src/util.js","original":{"line":84,"column":43},"name":"indexOf"},{"generated":{"line":125,"column":68},"source":"src/util.js","original":{"line":84,"column":50}},{"generated":{"line":125,"column":69},"source":"src/util.js","original":{"line":84,"column":51},"name":"flagConfig"},{"generated":{"line":125,"column":79},"source":"src/util.js","original":{"line":84,"column":61}},{"generated":{"line":125,"column":80},"source":"src/util.js","original":{"line":84,"column":62},"name":"flag"},{"generated":{"line":125,"column":84},"source":"src/util.js","original":{"line":84,"column":66}},{"generated":{"line":125,"column":85},"source":"src/util.js","original":{"line":84,"column":67}},{"generated":{"line":125,"column":86},"source":"src/util.js","original":{"line":84,"column":68}},{"generated":{"line":125,"column":91},"source":"src/util.js","original":{"line":84,"column":73}},{"generated":{"line":125,"column":92},"source":"src/util.js","original":{"line":84,"column":74}},{"generated":{"line":125,"column":93},"source":"src/util.js","original":{"line":84,"column":75}},{"generated":{"line":126,"column":14},"source":"src/util.js","original":{"line":84,"column":75}},{"generated":{"line":127,"column":14},"source":"src/util.js","original":{"line":84,"column":75}},{"generated":{"line":128,"column":12},"source":"src/util.js","original":{"line":84,"column":75}},{"generated":{"line":129,"column":12},"source":"src/util.js","original":{"line":84,"column":75}},{"generated":{"line":129,"column":18},"source":"src/util.js","original":{"line":85,"column":12}},{"generated":{"line":129,"column":22},"source":"src/util.js","original":{"line":85,"column":16},"name":"Error"},{"generated":{"line":129,"column":27},"source":"src/util.js","original":{"line":85,"column":21}},{"generated":{"line":129,"column":28},"source":"src/util.js","original":{"line":86,"column":10}},{"generated":{"line":129,"column":38},"source":"src/util.js","original":{"line":86,"column":13},"name":"flag"},{"generated":{"line":129,"column":42},"source":"src/util.js","original":{"line":86,"column":17}},{"generated":{"line":129,"column":94},"source":"src/util.js","original":{"line":87,"column":14},"name":"TUNABLE_FLAG_VALUE_RANGE_MAP"},{"generated":{"line":129,"column":130},"source":"src/util.js","original":{"line":87,"column":42}},{"generated":{"line":129,"column":131},"source":"src/util.js","original":{"line":87,"column":43},"name":"flag"},{"generated":{"line":129,"column":135},"source":"src/util.js","original":{"line":87,"column":47}},{"generated":{"line":129,"column":136},"source":"src/util.js","original":{"line":87,"column":48}},{"generated":{"line":129,"column":158},"source":"src/util.js","original":{"line":87,"column":60},"name":"flagConfig"},{"generated":{"line":129,"column":168},"source":"src/util.js","original":{"line":87,"column":70}},{"generated":{"line":129,"column":169},"source":"src/util.js","original":{"line":87,"column":71},"name":"flag"},{"generated":{"line":129,"column":173},"source":"src/util.js","original":{"line":87,"column":75}},{"generated":{"line":129,"column":174},"source":"src/util.js","original":{"line":87,"column":76}},{"generated":{"line":129,"column":178},"source":"src/util.js","original":{"line":88,"column":10}},{"generated":{"line":129,"column":190},"source":"src/util.js","original":{"line":88,"column":22}},{"generated":{"line":129,"column":191},"source":"src/util.js","original":{"line":88,"column":23}},{"generated":{"line":130,"column":10},"source":"src/util.js","original":{"line":88,"column":23}},{"generated":{"line":131,"column":12},"source":"src/util.js","original":{"line":88,"column":23}},{"generated":{"line":132,"column":12},"source":"src/util.js","original":{"line":88,"column":23}},{"generated":{"line":133,"column":10},"source":"src/util.js","original":{"line":88,"column":23}},{"generated":{"line":134,"column":12},"source":"src/util.js","original":{"line":92,"column":2},"name":"tf"},{"generated":{"line":134,"column":14},"source":"src/util.js","original":{"line":92,"column":4}},{"generated":{"line":134,"column":15},"source":"src/util.js","original":{"line":92,"column":5},"name":"env"},{"generated":{"line":134,"column":18},"source":"src/util.js","original":{"line":92,"column":8}},{"generated":{"line":134,"column":20},"source":"src/util.js","original":{"line":92,"column":10}},{"generated":{"line":134,"column":21},"source":"src/util.js","original":{"line":92,"column":11},"name":"setFlags"},{"generated":{"line":134,"column":29},"source":"src/util.js","original":{"line":92,"column":19}},{"generated":{"line":134,"column":30},"source":"src/util.js","original":{"line":92,"column":20},"name":"flagConfig"},{"generated":{"line":134,"column":40},"source":"src/util.js","original":{"line":92,"column":30}},{"generated":{"line":134,"column":41},"source":"src/util.js","original":{"line":92,"column":31}},{"generated":{"line":135,"column":12},"source":"src/util.js","original":{"line":92,"column":32}},{"generated":{"line":135,"column":29},"source":"src/util.js","original":{"line":94,"column":30},"name":"backend"},{"generated":{"line":135,"column":36},"source":"src/util.js","original":{"line":94,"column":37}},{"generated":{"line":135,"column":37},"source":"src/util.js","original":{"line":94,"column":38},"name":"split"},{"generated":{"line":135,"column":42},"source":"src/util.js","original":{"line":94,"column":43}},{"generated":{"line":135,"column":43},"source":"src/util.js","original":{"line":94,"column":44}},{"generated":{"line":135,"column":46},"source":"src/util.js","original":{"line":94,"column":47}},{"generated":{"line":135,"column":47},"source":"src/util.js","original":{"line":94,"column":48}},{"generated":{"line":135,"column":102},"source":"src/util.js","original":{"line":94,"column":9},"name":"runtime"},{"generated":{"line":135,"column":109},"source":"src/util.js","original":{"line":94,"column":16}},{"generated":{"line":135,"column":132},"source":"src/util.js","original":{"line":94,"column":18},"name":"$backend"},{"generated":{"line":135,"column":140},"source":"src/util.js","original":{"line":94,"column":26}},{"generated":{"line":136,"column":12},"source":"src/util.js","original":{"line":94,"column":26}},{"generated":{"line":136,"column":18},"source":"src/util.js","original":{"line":96,"column":6},"name":"runtime"},{"generated":{"line":136,"column":25},"source":"src/util.js","original":{"line":96,"column":13}},{"generated":{"line":136,"column":30},"source":"src/util.js","original":{"line":96,"column":18}},{"generated":{"line":136,"column":36},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":137,"column":14},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":138,"column":14},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":139,"column":12},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":140,"column":12},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":141,"column":12},"source":"src/util.js","original":{"line":96,"column":24}},{"generated":{"line":141,"column":19},"source":"src/util.js","original":{"line":97,"column":10},"name":"resetBackend"},{"generated":{"line":141,"column":31},"source":"src/util.js","original":{"line":97,"column":22}},{"generated":{"line":141,"column":32},"source":"src/util.js","original":{"line":97,"column":23},"name":"$backend"},{"generated":{"line":141,"column":40},"source":"src/util.js","original":{"line":97,"column":31}},{"generated":{"line":141,"column":41},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":142,"column":10},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":143,"column":10},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":144,"column":12},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":145,"column":8},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":146,"column":6},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":147,"column":4},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":148,"column":2},"source":"src/util.js","original":{"line":97,"column":32}},{"generated":{"line":148,"column":3},"source":"src/util.js","original":{"line":99,"column":1}},{"generated":{"line":149,"column":2},"source":"src/util.js","original":{"line":99,"column":1}},{"generated":{"line":150,"column":0},"source":"src/util.js","original":{"line":99,"column":1}}],"sources":{"src/util.js":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport {TUNABLE_FLAG_VALUE_RANGE_MAP} from './params';\n\nexport function isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\n\nexport function isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\n\nexport function isMobile() {\n  return isAndroid() || isiOS();\n}\n\n/**\n * Reset the target backend.\n *\n * @param backendName The name of the backend to be reset.\n */\nasync function resetBackend(backendName) {\n  const ENGINE = tf.engine();\n  if (!(backendName in ENGINE.registryFactory)) {\n    throw new Error(`${backendName} backend is not registed.`);\n  }\n\n  if (backendName in ENGINE.registry) {\n    const backendFactory = tf.findBackendFactory(backendName);\n    tf.removeBackend(backendName);\n    tf.registerBackend(backendName, backendFactory);\n  }\n\n  await tf.setBackend(backendName);\n}\n\n/**\n * Set environment flags.\n *\n * This is a wrapper function of `tf.env().setFlags()` to constrain users to\n * only set tunable flags (the keys of `TUNABLE_FLAG_TYPE_MAP`).\n *\n * ```js\n * const flagConfig = {\n *        WEBGL_PACK: false,\n *      };\n * await setEnvFlags(flagConfig);\n *\n * console.log(tf.env().getBool('WEBGL_PACK')); // false\n * console.log(tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')); // false\n * ```\n *\n * @param flagConfig An object to store flag-value pairs.\n */\nexport async function setBackendAndEnvFlags(flagConfig, backend) {\n  if (flagConfig == null) {\n    return;\n  } else if (typeof flagConfig !== 'object') {\n    throw new Error(\n        `An object is expected, while a(n) ${typeof flagConfig} is found.`);\n  }\n\n  // Check the validation of flags and values.\n  for (const flag in flagConfig) {\n    // TODO: check whether flag can be set as flagConfig[flag].\n    if (!(flag in TUNABLE_FLAG_VALUE_RANGE_MAP)) {\n      throw new Error(`${flag} is not a tunable or valid environment flag.`);\n    }\n    if (TUNABLE_FLAG_VALUE_RANGE_MAP[flag].indexOf(flagConfig[flag]) === -1) {\n      throw new Error(\n          `${flag} value is expected to be in the range [${\n              TUNABLE_FLAG_VALUE_RANGE_MAP[flag]}], while ${flagConfig[flag]}` +\n          ' is found.');\n    }\n  }\n\n  tf.env().setFlags(flagConfig);\n\n  const [runtime, $backend] = backend.split('-');\n\n  if (runtime === 'tfjs') {\n    await resetBackend($backend);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"cd80735503eb709904b1f1e5c4e2744a","cacheData":{"env":{}}}