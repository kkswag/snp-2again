{"id":"node_modules/scatter-gl/dist/label.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/scatter-gl/package.json","includedInParent":true,"mtime":1666456616041}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CollisionGrid = (function () {\n    function CollisionGrid(bound, cellWidth, cellHeight) {\n        this.bound = bound;\n        this.cellWidth = cellWidth;\n        this.cellHeight = cellHeight;\n        this.numHorizCells = Math.ceil(this.boundWidth(bound) / cellWidth);\n        this.numVertCells = Math.ceil(this.boundHeight(bound) / cellHeight);\n        this.grid = new Array(this.numHorizCells * this.numVertCells);\n    }\n    CollisionGrid.prototype.boundWidth = function (bound) {\n        return bound.hiX - bound.loX;\n    };\n    CollisionGrid.prototype.boundHeight = function (bound) {\n        return bound.hiY - bound.loY;\n    };\n    CollisionGrid.prototype.boundsIntersect = function (a, b) {\n        return !(a.loX > b.hiX || a.loY > b.hiY || a.hiX < b.loX || a.hiY < b.loY);\n    };\n    CollisionGrid.prototype.insert = function (bound, justTest) {\n        if (justTest === void 0) { justTest = false; }\n        if (bound.hiX < this.bound.loX ||\n            bound.loX > this.bound.hiX ||\n            bound.hiY < this.bound.loY ||\n            bound.loY > this.bound.hiY) {\n            return false;\n        }\n        var minCellX = this.getCellX(bound.loX);\n        var maxCellX = this.getCellX(bound.hiX);\n        var minCellY = this.getCellY(bound.loY);\n        var maxCellY = this.getCellY(bound.hiY);\n        var baseIdx = minCellY * this.numHorizCells + minCellX;\n        var idx = baseIdx;\n        for (var j = minCellY; j <= maxCellY; j++) {\n            for (var i = minCellX; i <= maxCellX; i++) {\n                var cell = this.grid[idx++];\n                if (cell) {\n                    for (var k = 0; k < cell.length; k++) {\n                        if (this.boundsIntersect(bound, cell[k])) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            idx += this.numHorizCells - (maxCellX - minCellX + 1);\n        }\n        if (justTest) {\n            return true;\n        }\n        idx = baseIdx;\n        for (var j = minCellY; j <= maxCellY; j++) {\n            for (var i = minCellX; i <= maxCellX; i++) {\n                if (!this.grid[idx]) {\n                    this.grid[idx] = [bound];\n                }\n                else {\n                    this.grid[idx].push(bound);\n                }\n                idx++;\n            }\n            idx += this.numHorizCells - (maxCellX - minCellX + 1);\n        }\n        return true;\n    };\n    CollisionGrid.prototype.getCellX = function (x) {\n        return Math.floor((x - this.bound.loX) / this.cellWidth);\n    };\n    CollisionGrid.prototype.getCellY = function (y) {\n        return Math.floor((y - this.bound.loY) / this.cellHeight);\n    };\n    return CollisionGrid;\n}());\nexports.CollisionGrid = CollisionGrid;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/scatter-gl/dist/label.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/scatter-gl/dist/label.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CollisionGrid = (function () {\n    function CollisionGrid(bound, cellWidth, cellHeight) {\n        this.bound = bound;\n        this.cellWidth = cellWidth;\n        this.cellHeight = cellHeight;\n        this.numHorizCells = Math.ceil(this.boundWidth(bound) / cellWidth);\n        this.numVertCells = Math.ceil(this.boundHeight(bound) / cellHeight);\n        this.grid = new Array(this.numHorizCells * this.numVertCells);\n    }\n    CollisionGrid.prototype.boundWidth = function (bound) {\n        return bound.hiX - bound.loX;\n    };\n    CollisionGrid.prototype.boundHeight = function (bound) {\n        return bound.hiY - bound.loY;\n    };\n    CollisionGrid.prototype.boundsIntersect = function (a, b) {\n        return !(a.loX > b.hiX || a.loY > b.hiY || a.hiX < b.loX || a.hiY < b.loY);\n    };\n    CollisionGrid.prototype.insert = function (bound, justTest) {\n        if (justTest === void 0) { justTest = false; }\n        if (bound.hiX < this.bound.loX ||\n            bound.loX > this.bound.hiX ||\n            bound.hiY < this.bound.loY ||\n            bound.loY > this.bound.hiY) {\n            return false;\n        }\n        var minCellX = this.getCellX(bound.loX);\n        var maxCellX = this.getCellX(bound.hiX);\n        var minCellY = this.getCellY(bound.loY);\n        var maxCellY = this.getCellY(bound.hiY);\n        var baseIdx = minCellY * this.numHorizCells + minCellX;\n        var idx = baseIdx;\n        for (var j = minCellY; j <= maxCellY; j++) {\n            for (var i = minCellX; i <= maxCellX; i++) {\n                var cell = this.grid[idx++];\n                if (cell) {\n                    for (var k = 0; k < cell.length; k++) {\n                        if (this.boundsIntersect(bound, cell[k])) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            idx += this.numHorizCells - (maxCellX - minCellX + 1);\n        }\n        if (justTest) {\n            return true;\n        }\n        idx = baseIdx;\n        for (var j = minCellY; j <= maxCellY; j++) {\n            for (var i = minCellX; i <= maxCellX; i++) {\n                if (!this.grid[idx]) {\n                    this.grid[idx] = [bound];\n                }\n                else {\n                    this.grid[idx].push(bound);\n                }\n                idx++;\n            }\n            idx += this.numHorizCells - (maxCellX - minCellX + 1);\n        }\n        return true;\n    };\n    CollisionGrid.prototype.getCellX = function (x) {\n        return Math.floor((x - this.bound.loX) / this.cellWidth);\n    };\n    CollisionGrid.prototype.getCellY = function (y) {\n        return Math.floor((y - this.bound.loY) / this.cellHeight);\n    };\n    return CollisionGrid;\n}());\nexports.CollisionGrid = CollisionGrid;\n"},"lineCount":75}},"error":null,"hash":"91fb5e8a9ce296fdf9ea2c0be55cced9","cacheData":{"env":{}}}