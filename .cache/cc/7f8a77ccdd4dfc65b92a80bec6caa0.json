{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js.map","includedInParent":true,"mtime":1666456615737},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1666456615737}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResizeBilinearBackpropProgram = void 0;\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeBilinearBackpropProgram {\n  constructor(dyShape, inputShape, alignCorners) {\n    this.variableNames = ['dy'];\n    this.outputShape = [];\n    this.outputShape = inputShape;\n    const [, xHeight, xWidth] = inputShape;\n    const [, yHeight, yWidth] = dyShape;\n    // In the backwards pass, we want to find the pixels that were generated for\n    // each pixel in the input image the forward pass and add the corresponding\n    // coefficient from dy to the gradient (with some interpolation).\n    const effectiveXSize = [alignCorners && yHeight > 1 ? xHeight - 1 : xHeight, alignCorners && yWidth > 1 ? xWidth - 1 : xWidth];\n    const effectiveYSize = [alignCorners && yHeight > 1 ? yHeight - 1 : yHeight, alignCorners && yWidth > 1 ? yWidth - 1 : yWidth];\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = Math.ceil(invHeightScale) * 2 + 2;\n    const winWidth = Math.ceil(invWidthScale) * 2 + 2;\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${xHeight - 1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${xWidth - 1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n  }\n}\nexports.ResizeBilinearBackpropProgram = ResizeBilinearBackpropProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":23,"column":0}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":23,"column":6}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":20,"column":42},"generated":{"line":23,"column":35}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":20,"column":42},"generated":{"line":23,"column":36}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":24,"column":2}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":24,"column":13}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":24,"column":14}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":26,"column":47},"generated":{"line":24,"column":21}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":24,"column":23}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":27,"column":50},"generated":{"line":24,"column":33}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":27,"column":52},"generated":{"line":24,"column":35}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":27,"column":73},"generated":{"line":24,"column":47}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":27,"column":73},"generated":{"line":24,"column":49}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":25,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":25,"column":8}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":25,"column":9}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":15},"generated":{"line":25,"column":22}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":25,"column":25}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":25,"column":26}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":25,"column":30}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":25,"column":31}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":26,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":26,"column":8}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":26,"column":9}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":26,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":26},"generated":{"line":26,"column":23}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":22,"column":28},"generated":{"line":26,"column":25}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":27,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":27,"column":8}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":27,"column":9}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":20},"generated":{"line":27,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":27,"column":23}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":27,"column":33}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":28,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":28,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":28,"column":13}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":20},"generated":{"line":28,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":28,"column":22}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":28,"column":28}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":31},"generated":{"line":28,"column":29}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":28,"column":32}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":29,"column":44},"generated":{"line":28,"column":42}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":29,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":29,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":29,"column":13}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":29,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":29,"column":22}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":28},"generated":{"line":29,"column":28}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":29},"generated":{"line":29,"column":29}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":29,"column":32}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":30,"column":39},"generated":{"line":29,"column":39}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":30,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":31,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":32,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":33,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":33,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":33,"column":24}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":36,"column":45},"generated":{"line":33,"column":27}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":7},"generated":{"line":33,"column":28}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":33,"column":40}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":23},"generated":{"line":33,"column":44}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":30},"generated":{"line":33,"column":51}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":33},"generated":{"line":33,"column":54}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":34},"generated":{"line":33,"column":55}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":38},"generated":{"line":33,"column":58}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":45},"generated":{"line":33,"column":65}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":48},"generated":{"line":33,"column":68}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":49},"generated":{"line":33,"column":69}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":52},"generated":{"line":33,"column":72}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":37,"column":59},"generated":{"line":33,"column":79}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":33,"column":81}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":33,"column":93}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":33,"column":97}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":33,"column":103}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":32},"generated":{"line":33,"column":106}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":33},"generated":{"line":33,"column":107}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":37},"generated":{"line":33,"column":110}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":43},"generated":{"line":33,"column":116}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":46},"generated":{"line":33,"column":119}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":47},"generated":{"line":33,"column":120}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":50},"generated":{"line":33,"column":123}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":38,"column":56},"generated":{"line":33,"column":129}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":39,"column":5},"generated":{"line":33,"column":130}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":34,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":34,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":34,"column":24}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":41,"column":45},"generated":{"line":34,"column":27}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":7},"generated":{"line":34,"column":28}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":19},"generated":{"line":34,"column":40}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":23},"generated":{"line":34,"column":44}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":30},"generated":{"line":34,"column":51}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":33},"generated":{"line":34,"column":54}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":34},"generated":{"line":34,"column":55}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":38},"generated":{"line":34,"column":58}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":45},"generated":{"line":34,"column":65}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":48},"generated":{"line":34,"column":68}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":49},"generated":{"line":34,"column":69}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":52},"generated":{"line":34,"column":72}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":42,"column":59},"generated":{"line":34,"column":79}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":7},"generated":{"line":34,"column":81}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":34,"column":93}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":34,"column":97}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":34,"column":103}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":34,"column":106}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":33},"generated":{"line":34,"column":107}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":37},"generated":{"line":34,"column":110}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":43},"generated":{"line":34,"column":116}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":46},"generated":{"line":34,"column":119}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":47},"generated":{"line":34,"column":120}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":50},"generated":{"line":34,"column":123}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":43,"column":56},"generated":{"line":34,"column":129}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":44,"column":5},"generated":{"line":34,"column":130}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":35,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":35,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":21},"generated":{"line":35,"column":21}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":35,"column":24}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":38},"generated":{"line":35,"column":38}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":39},"generated":{"line":35,"column":39}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":40},"generated":{"line":35,"column":40}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":35,"column":41}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":44},"generated":{"line":35,"column":44}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":58},"generated":{"line":35,"column":58}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":59},"generated":{"line":35,"column":59}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":60},"generated":{"line":35,"column":60}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":46,"column":61},"generated":{"line":35,"column":61}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":36,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":36,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":20},"generated":{"line":36,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":23},"generated":{"line":36,"column":23}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":37},"generated":{"line":36,"column":37}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":38},"generated":{"line":36,"column":38}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":39},"generated":{"line":36,"column":39}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":40},"generated":{"line":36,"column":40}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":43},"generated":{"line":36,"column":43}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":57},"generated":{"line":36,"column":57}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":58},"generated":{"line":36,"column":58}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":59},"generated":{"line":36,"column":59}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":47,"column":60},"generated":{"line":36,"column":60}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":37,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":37,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":24},"generated":{"line":37,"column":24}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":37,"column":27}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":28},"generated":{"line":37,"column":28}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":31},"generated":{"line":37,"column":31}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":49,"column":42},"generated":{"line":37,"column":42}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":38,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":38,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":23},"generated":{"line":38,"column":23}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":26},"generated":{"line":38,"column":26}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":27},"generated":{"line":38,"column":27}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":30},"generated":{"line":38,"column":30}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":50,"column":40},"generated":{"line":38,"column":40}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":39,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":40,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":41,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":41,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":41,"column":19}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":23},"generated":{"line":41,"column":22}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":27},"generated":{"line":41,"column":26}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":28},"generated":{"line":41,"column":27}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":32},"generated":{"line":41,"column":31}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":33},"generated":{"line":41,"column":32}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":47},"generated":{"line":41,"column":46}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":48},"generated":{"line":41,"column":47}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":51},"generated":{"line":41,"column":50}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":52},"generated":{"line":41,"column":51}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":56},"generated":{"line":41,"column":54}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":54,"column":57},"generated":{"line":41,"column":55}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":42,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":42,"column":10}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":18},"generated":{"line":42,"column":18}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":22},"generated":{"line":42,"column":21}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":26},"generated":{"line":42,"column":25}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":27},"generated":{"line":42,"column":26}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":31},"generated":{"line":42,"column":30}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":32},"generated":{"line":42,"column":31}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":45},"generated":{"line":42,"column":44}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":46},"generated":{"line":42,"column":45}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":49},"generated":{"line":42,"column":48}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":50},"generated":{"line":42,"column":49}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":54},"generated":{"line":42,"column":52}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":55,"column":55},"generated":{"line":42,"column":53}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":43,"column":4}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":57,"column":8},"generated":{"line":43,"column":8}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":43,"column":9}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":57,"column":17},"generated":{"line":43,"column":17}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":57,"column":20},"generated":{"line":43,"column":20}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":67,"column":42},"generated":{"line":53,"column":42}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":67,"column":53},"generated":{"line":53,"column":53}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":54,"column":41}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":68,"column":51},"generated":{"line":54,"column":51}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":70,"column":45},"generated":{"line":56,"column":45}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":70,"column":59},"generated":{"line":56,"column":59}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":71,"column":44},"generated":{"line":57,"column":44}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":71,"column":57},"generated":{"line":57,"column":57}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":73,"column":36},"generated":{"line":59,"column":36}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":73,"column":45},"generated":{"line":59,"column":45}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":74,"column":35},"generated":{"line":60,"column":35}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":74,"column":43},"generated":{"line":60,"column":43}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":88,"column":34},"generated":{"line":74,"column":34}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":88,"column":41},"generated":{"line":74,"column":41}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":96,"column":36},"generated":{"line":82,"column":36}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":96,"column":42},"generated":{"line":82,"column":42}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":102,"column":54},"generated":{"line":88,"column":54}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":102,"column":61},"generated":{"line":88,"column":61}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":102,"column":64},"generated":{"line":88,"column":64}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":102,"column":65},"generated":{"line":88,"column":65}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":108,"column":53},"generated":{"line":94,"column":53}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":108,"column":59},"generated":{"line":94,"column":59}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":108,"column":62},"generated":{"line":94,"column":62}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":108,"column":63},"generated":{"line":94,"column":63}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":138,"column":5},"generated":{"line":124,"column":5}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":139,"column":2},"generated":{"line":125,"column":2}},{"source":"../src/resize_bilinear_backprop_gpu.ts","name":null,"original":{"line":140,"column":1},"generated":{"line":127,"column":0}}],"sources":{"../src/resize_bilinear_backprop_gpu.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeBilinearBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      dyShape: [number, number, number, number],\n      inputShape: [number, number, number, number], alignCorners: boolean) {\n    this.outputShape = inputShape;\n    const [, xHeight, xWidth, ] = inputShape;\n    const [, yHeight, yWidth] = dyShape;\n\n    // In the backwards pass, we want to find the pixels that were generated for\n    // each pixel in the input image the forward pass and add the corresponding\n    // coefficient from dy to the gradient (with some interpolation).\n\n    const effectiveXSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n      (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n\n    const effectiveYSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n      (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${xHeight - 1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${xWidth - 1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"c418674331ba337e1b4f6d26b0ddb7bf","cacheData":{"env":{}}}