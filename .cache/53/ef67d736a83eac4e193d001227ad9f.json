{"id":"node_modules/scatter-gl/dist/data.js","dependencies":[{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/package.json","includedInParent":true,"mtime":1669325277617},{"name":"/Applications/XAMPP/xamppfiles/htdocs/test/node_modules/scatter-gl/package.json","includedInParent":true,"mtime":1666456616041}],"generated":{"js":"\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DIMENSIONALITY_ERROR_MESSAGE = 'Points must be an array of either 2 or 3 dimensional number arrays';\nvar Dataset = (function () {\n    function Dataset(points, metadata) {\n        var e_1, _a;\n        if (metadata === void 0) { metadata = []; }\n        this.points = points;\n        this.metadata = metadata;\n        var dimensions = points[0].length;\n        if (!(dimensions === 2 || dimensions === 3)) {\n            throw new Error(DIMENSIONALITY_ERROR_MESSAGE);\n        }\n        try {\n            for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n                var point = points_1_1.value;\n                if (dimensions !== point.length) {\n                    throw new Error(DIMENSIONALITY_ERROR_MESSAGE);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.dimensions = dimensions;\n    }\n    Dataset.prototype.setSpriteMetadata = function (spriteMetadata) {\n        this.spriteMetadata = spriteMetadata;\n    };\n    return Dataset;\n}());\nexports.Dataset = Dataset;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/scatter-gl/dist/data.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/scatter-gl/dist/data.js":"\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DIMENSIONALITY_ERROR_MESSAGE = 'Points must be an array of either 2 or 3 dimensional number arrays';\nvar Dataset = (function () {\n    function Dataset(points, metadata) {\n        var e_1, _a;\n        if (metadata === void 0) { metadata = []; }\n        this.points = points;\n        this.metadata = metadata;\n        var dimensions = points[0].length;\n        if (!(dimensions === 2 || dimensions === 3)) {\n            throw new Error(DIMENSIONALITY_ERROR_MESSAGE);\n        }\n        try {\n            for (var points_1 = __values(points), points_1_1 = points_1.next(); !points_1_1.done; points_1_1 = points_1.next()) {\n                var point = points_1_1.value;\n                if (dimensions !== point.length) {\n                    throw new Error(DIMENSIONALITY_ERROR_MESSAGE);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (points_1_1 && !points_1_1.done && (_a = points_1.return)) _a.call(points_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.dimensions = dimensions;\n    }\n    Dataset.prototype.setSpriteMetadata = function (spriteMetadata) {\n        this.spriteMetadata = spriteMetadata;\n    };\n    return Dataset;\n}());\nexports.Dataset = Dataset;\n"},"lineCount":48}},"error":null,"hash":"969fb4a61261b86ed53a014173aadd6a","cacheData":{"env":{}}}