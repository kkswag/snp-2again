{"version":3,"file":"kernel_utils.js","sourceRoot":"","sources":["../../src/kernels/kernel_utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,YAAY,EAAc,IAAI,EAAC,MAAM,uBAAuB,CAAC;AAErE,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AAEtC;;;;;;;GAOG;AACH,MAAM,UAAU,uBAAuB,CACnC,CAAa,EAAE,IAAqB,EAAE,OAAoB;IAM5D,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;IACvB,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;IAE7B,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvD,IAAI,IAAI,GAAG,YAAY,CAAC;IACxB,MAAM,YAAY,GAAG,YAAY,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAClE,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,IAAI,kBAAkB,GAAG,KAAK,CAAC;IAC/B,IAAI,YAAY,IAAI,IAAI,EAAE;QACxB,MAAM,QAAQ,GAAa,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SACvC;QAED,IAAI,GAAG,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACzD,WAAW;YACP,SAAS,CAAC,EAAC,MAAM,EAAE,EAAC,CAAC,EAAC,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,EAAE,OAAO,EAAC,CAAC,CAAC;QAEnE,MAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;QAC/C,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;QAClE,IAAI,YAAY,KAAK,GAAG,EAAE;YACxB,kBAAkB,GAAG,IAAI,CAAC;SAC3B;KACF;IAED,OAAO,EAAC,UAAU,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE,kBAAkB,EAAC,CAAC;AAC3E,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n"]}