{"version":3,"file":"NonMaxSuppressionV4.js","sourceRoot":"","sources":["../../src/kernels/NonMaxSuppressionV4.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAA2B,mBAAmB,EAAkE,MAAM,uBAAuB,CAAC;AAIrJ,OAAO,EAAC,iBAAiB,EAAC,MAAM,0BAA0B,CAAC;AAE3D,IAAI,QAGsC,CAAC;AAE3C,SAAS,KAAK,CAAC,OAAoB;IACjC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CACzB,mBAAmB,EACnB,QAAQ,EAAG,UAAU;IACrB;QACE,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,MAAM;KACP,CAAC,CAAC;AACT,CAAC;AAED,SAAS,mBAAmB,CAAC,IAI5B;IACC,MAAM,EAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC;IACtC,MAAM,EAAC,YAAY,EAAE,aAAa,EAAE,cAAc,EAAE,kBAAkB,EAAC,GACnE,KAAK,CAAC;IACV,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,MAAM,CAAC;IAE/B,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IACvD,MAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAEzD,MAAM,SAAS,GAAG,QAAQ,CACtB,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,cAAc,EAC9D,kBAAkB,CAAC,CAAC;IAExB,MAAM,EAAC,gBAAgB,EAAE,YAAY,EAAE,eAAe,EAAE,aAAa,EAAC,GAClE,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAE1C,4EAA4E;IAC5E,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAEpC,MAAM,qBAAqB,GACvB,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;IAElE,MAAM,kBAAkB,GAAG,OAAO,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;IAE1E,OAAO,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;AACrD,CAAC;AAED,MAAM,CAAC,MAAM,yBAAyB,GAAiB;IACrD,UAAU,EAAE,mBAAmB;IAC/B,WAAW,EAAE,MAAM;IACnB,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE,mBAAuC;CACpD,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n"]}