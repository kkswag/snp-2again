{"version":3,"file":"RotateWithOffset.js","sourceRoot":"","sources":["../../src/kernels/RotateWithOffset.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAA2B,gBAAgB,EAA4D,MAAM,uBAAuB,CAAC;AAC5I,OAAO,EAAC,YAAY,EAAC,MAAM,uBAAuB,CAAC;AAInD,IAAI,UAGiE,CAAC;AAEtE,SAAS,KAAK,CAAC,OAAoB;IACjC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,EAAE;QACjE,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,QAAQ;QACR,QAAQ;KACT,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAIhC;IACC,MAAM,EAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC;IACtC,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,CAAC;IACvB,MAAM,EAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC,GAAG,KAAK,CAAC;IAE3C,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IACzD,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IACvD,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;IAEnD,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IAElE,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GACpB,YAAY,CAAC,cAAc,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;IAEjE,MAAM,WAAW,GAAG,SAAS,KAAK,CAAC,CAAC;IACpC,MAAM,gBAAgB,GAAG,GAAG,CAAC;IAE7B,MAAM,UAAU,GAAG,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC;QAC9C,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACvE,CAAC,GAAG,SAAS,EAAE,gBAAgB,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;IAEpE,UAAU,CACN,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EACtE,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAClD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,CAAC,MAAM,sBAAsB,GAAiB;IAClD,UAAU,EAAE,gBAAgB;IAC5B,WAAW,EAAE,MAAM;IACnB,UAAU,EAAE,gBAAoC;IAChD,SAAS,EAAE,KAAK;CACjB,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n"]}